include "telemetry.conf"

kafka-to-sharding-processor {
  bootstrap-servers = "localhost:9092"
  topics = ["user-events"]
  group = "user-processing"
  ask-timeout = 60s
}

akka.http {
  server.preview.enable-http2 = on
}

akka {
  actor {
    provider = "cluster"

    serialization-bindings {
      "cnapp.poc.domain.CborSerializable" = jackson-cbor
    }
  }
  coordinated-shutdown.exit-jvm = on
  remote.artery {
    canonical {
      hostname = "127.0.0.1"
    }
  }

  cluster {
    seed-nodes = [
      "akka://KafkaToSharding@127.0.0.1:2553"
      "akka://KafkaToSharding@127.0.0.1:2554"
    ]
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
    split-brain-resolver {
      # Select one of the available strategies (see descriptions below):
      # static-quorum, keep-majority, keep-oldest, keep-referee, down-all,lease-majority
      # if left "off" when the downing provider is enabled cluster startup will fail.
      active-strategy = keep-majority
    }
    sharding {
      retry-interval = 200ms
      waiting-for-state-timeout = 200ms
      passivate-idle-entity-after = 20 m
    }
  }
}
akka.management {
  http {
    hostname = "127.0.0.1"
    port = 8558
    route-providers-read-only = false
  }
}
akka.management.ui {
  update-interval = 1s
}

shopping.mongo.host = "localhost"
shopping.mongo.port = 27017
